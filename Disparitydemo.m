close all;

% % Auto-generated by cameraCalibrator app on 05-Nov-2023
% %-------------------------------------------------------
% 
% 
% % Define images to process
% imageFileNames = {'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0027.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0029.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0030.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0031.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0032.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0035.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0037.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0038.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0039.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0040.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0041.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0042.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0043.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0044.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0045.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0047.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0048.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0049.jpg',...
%     'C:\Users\Schul\Pictures\digiCamControl\Session1\DSC_0050.jpg',...
%     };


bild1 = imread("C:\Users\Schul\Entwicklung\QuartusProjekte\Abschlussprojekt\pyUartReceive\empfangeneBilder\Bild_17.png");
bild2 = imread("C:\Users\Schul\Entwicklung\QuartusProjekte\Abschlussprojekt\pyUartReceive\empfangeneBilder\Bild_18.png");

bild1_sw = im2gray(bild1);

% For example, you can use the calibration data to remove effects of lens distortion.
undistorted1 = undistortImage(bild1, cameraParams, "OutputView", "full");
undistorted2 = undistortImage(bild2, cameraParams, "OutputView", "full");

% bild1Grid = imageGrid(bild1, "method", "burn");
% bild2Grid = imageGrid(bild2, "method", "burn");
undistorted1Grid = imageGrid(undistorted1, "method", "burn");
undistorted2Grid = imageGrid(undistorted2,  "method", "burn");
% 
rectGrid1 = imageGrid(undistorted1, "method", "burn");
rectGrid2 = imageGrid(undistorted2, "method", "burn");

% figure
% montage({rectGrid1, rectGrid2});

disparityRange = [0 64];
uniquenessThreshold = 1;
blocksize = 21;

dispa = disparityBM(im2gray(bild1), im2gray(bild2), 'DisparityRange',disparityRange, 'UniquenessThreshold', uniquenessThreshold, "BlockSize", blocksize);

% figure
% imshow(dispa);

figure
imshow(dispa, disparityRange);
colormap jet
colorbar

A = stereoAnaglyph(undistorted1, undistorted2);

dispa2 = calcDisparity(im2gray(bild1), im2gray(bild2), 4, 64);

figure
imshow(dispa2);

% figure
% imshow(A)
% title('Red-Cyan composite view of the rectified stereo pair image')

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')


